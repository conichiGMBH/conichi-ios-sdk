//
//  CNIErrorFacade.h
//  Conichi_Errors
//
//  Created by WLADYSLAW SURALA on 15/02/2017.
//  Copyright Â© 2017 conichi. All rights reserved.
//

@import Foundation;

NS_ASSUME_NONNULL_BEGIN


@interface CNIErrorFacade : NSObject

/**
 Creates NSError object

 @param code one of CNIErrorCodes error codes relevant to specific domain
 @param domain specific for created error
 @return new error object
 */
- (NSError *)errorWithCode:(NSInteger)code domain:(NSErrorDomain)domain NS_SWIFT_NAME(error(code:domain:));

/**
 Creates NSError object

 @param code one of CNIErrorCodes error codes relevant to specific domain
 @param domain domain specific for created error
 @param message - will be stored in userInfo under CNIErrorDeveloperMessageKey
 @return new error object
 */
- (NSError *)errorWithCode:(NSInteger)code domain:(NSErrorDomain)domain message:(nullable NSString *)message NS_SWIFT_NAME(error(code:domain:message:));

/**
 Creates NSError object

 @param code one of CNIErrorCodes error codes relevant to specific domain
 @param domain domain specific for created error
 @param message - will be stored in userInfo under CNIErrorDeveloperMessageKey
 @param error - will be stored in userInfo under NSUnderlyingErrorKey
 @return new error object
 */
- (NSError *)errorWithCode:(NSInteger)code domain:(NSErrorDomain)domain message:(nullable NSString *)message underlyingError:(nullable NSError *)error NS_SWIFT_NAME(error(code:domain:message:underlyingError:));

/**
 Creates NSError object

 @param code one of CNIErrorCodes error codes relevant to specific domain
 @param domain domain specific for created error
 @param message - will be stored in userInfo under CNIErrorDeveloperMessageKey
 @param underlyingError - will be stored in user info under NSUnderlyingErrorKey
 @param userInfo - additional information about error
 @return new error object
 */
- (NSError *)errorWithCode:(NSInteger)code domain:(NSErrorDomain)domain message:(nullable NSString *)message underlyingError:(nullable NSError *)underlyingError userInfo:(nullable NSDictionary *)userInfo NS_SWIFT_NAME(error(code:domain:message:underlyingError:userInfo:));

/**
 *  Creates an NSError object with domain specific to the error that occured:
 *  - Precedence have errors under CNIJSONErrorsKey in responseData (if present), in that case returns error in CNIConichiAPIErrorDomain.
 *  - In other cases it returns error specific for responseStatusCode with precedence of CNIHTTPErrorDomain, then CNIURLErrorDomain.
 *  - It can assign developerCode, developerMessage, underlyingError if exists.
 *
 *  @param error              error generated by network framework
 *  @param responseStatusCode HTTP status code of the network response
 *  @param responseData       response data object
 *
 *  @return new error object
 */

- (NSError *)errorWithResponseHTTPStatusCode:(NSInteger)responseStatusCode responseError:(nullable NSError *)error responseData:(nullable NSData *)responseData NS_SWIFT_NAME(error(httpResponseStatusCode:responseError:responseData:));

/**
 *  Creates an NSError object with domain specific to the error that occured: 
 *  - Precedence have errors under CNIJSONErrorsKey in responseObject (if present), in that case returns error in CNIConichiAPIErrorDomain.
 *  - In other cases it returns error specific for responseStatusCode with precedence of CNIHTTPErrorDomain, then CNIURLErrorDomain.
 *  - It can assign developerCode, developerMessage, underlyingError if exists.
 *
 *  @param error              error generated by network framework
 *  @param responseStatusCode HTTP status code of the network response
 *  @param responseObject     parsed response data
 *
 *  @return new error object
 */
- (NSError *)errorWithResponseHTTPStatusCode:(NSInteger)responseStatusCode responseError:(nullable NSError *)error responseObject:(nullable id)responseObject NS_SWIFT_NAME(error(httpResponseStatusCode:responseError:responseObject:));

/**
 *  Creates an error with CNIErrorCodeInvalidArgumentError code.
 *  Use it when the argument with name expects value diffrent from the given value
 *  @param name - argument name
 *  @param value - given value
 *  @param message - message for developer
 *  @param userInfo - information about error
 *
 *  @return new error object
 */
- (NSError *)invalidArgumentErrorWithName:(NSString *__nonnull)name value:(nullable id)value message:(nullable NSString *)message userInfo:(nullable NSDictionary *)userInfo NS_SWIFT_NAME(invalidArgumentError(name:value:message:userInfo:));

/**
 *  Creates an error with CNIErrorCodeInvalidArgumentError code.
 *  Use it when the argument with name expects value diffrent from the given value
 *  @param name - argument name
 *  @param value - given value
 *  @param message - message for developer
 *
 *  @return new error object
 */
- (NSError *)invalidArgumentErrorWithName:(NSString *)name value:(nullable id)value message:(nullable NSString *)message NS_SWIFT_NAME(invalidArgumentError(name:value:message:));

/**
 *  Creates an error with CNIErrorCodeInvalidArgumentError code.
 *  Use it when the argument with name expected to be existed but it's nil
 *
 *  @param name - argument name
 *  @param message - message for developer. It will be stored in user info under CNIErrorDeveloperMessageKey
 *  @param functionName - function name for developer to easily recognize the exact place of the error.
 *                       It will be stored under CNIErrorFunctionNameKey
 *  @param fileName - file name for developer to easily recognize the exact place of the error.
 *                       It will be stored under CNIErrorFileNameKey
 *
 *  @return new error object
 */
- (NSError *)requiredArgumentErrorWithName:(NSString *)name message:(nullable NSString *)message functionName:(const char *)functionName fileName:(const char *)fileName NS_SWIFT_NAME(requiredArgumentError(name:message:functionName:fileName:));

/**
 *  Creates an error with CNIErrorCodeInvalidArgumentError code.
 *  Use it when the json must have object for key but it's nil
 *
 *  @param name - json key
 *  @param message - message for developer. It will be stored in user info under CNIErrorDeveloperMessageKey
 *  @param json - repsonse's json object
 *  @param response - response object
 *
 *  @return new error object
 */
- (NSError *)requiredJSONObjectErrorWithName:(NSString *)name message:(nullable NSString *)message json:(nullable NSDictionary *)json response:(nullable NSURLResponse *)response NS_SWIFT_NAME(requiredJSONObjectError(name:message:json:response:));

/**
 Creates an error converted from external payment error

 @param error source of payment provider error, it's error code is converted to conichi error code in CNIPaymentErrorDomain
 @return new error object with conichi description
 */
- (NSError *)paymentProviderErrorWithError:(nullable NSError *)error NS_SWIFT_NAME(paymentProviderError(error:));
@end

NS_ASSUME_NONNULL_END
