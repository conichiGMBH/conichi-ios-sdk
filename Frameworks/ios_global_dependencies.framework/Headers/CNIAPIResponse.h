//
//  CNIAPIResponse.h
//  Conichi_Network
//
//  Created by Anton Domashnev on 30/01/2017.
//  Copyright Â© 2017 conichi GmbH. All rights reserved.
//

@import Foundation;

@class CNIAPIRequest;

#import "CNIAPITypes.h"


NS_ASSUME_NONNULL_BEGIN

FOUNDATION_EXPORT NSErrorDomain const CNIAPIResponseErrorDomain;

/// Taken from https://github.com/spotify/SPTDataLoader/blob/master/include/SPTDataLoader/SPTDataLoaderResponse.h
/// http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html
typedef NS_ENUM(NSInteger, CNIAPIResponseHTTPStatusCode) {
    CNIAPIResponseeHTTPStatusCodeInvalid = 0,

    // Informational
    CNIAPIResponseeHTTPStatusCodeContinue = 100,
    CNIAPIResponseeHTTPStatusCodeSwitchProtocols = 101,

    // Successful
    CNIAPIResponseeHTTPStatusCodeOK = 200,
    CNIAPIResponseeHTTPStatusCodeCreated = 201,
    CNIAPIResponseeHTTPStatusCodeAccepted = 202,
    CNIAPIResponseeHTTPStatusCodeNonAuthoritiveInformation = 203,
    CNIAPIResponseeHTTPStatusCodeNoContent = 204,
    CNIAPIResponseeHTTPStatusCodeResetContent = 205,
    CNIAPIResponseeHTTPStatusCodePartialContent = 206,

    // Redirection
    CNIAPIResponseeHTTPStatusCodeMovedMultipleChoices = 300,
    CNIAPIResponseeHTTPStatusCodeMovedPermanently = 301,
    CNIAPIResponseeHTTPStatusCodeFound = 302,
    CNIAPIResponseeHTTPStatusCodeSeeOther = 303,
    CNIAPIResponseeHTTPStatusCodeNotModified = 304,
    CNIAPIResponseeHTTPStatusCodeUseProxy = 305,
    CNIAPIResponseeHTTPStatusCodeUnused = 306,
    CNIAPIResponseeHTTPStatusCodeTemporaryRedirect = 307,

    // Client Error
    CNIAPIResponseeHTTPStatusCodeBadRequest = 400,
    CNIAPIResponseeHTTPStatusCodeUnauthorised = 401,
    CNIAPIResponseeHTTPStatusCodePaymentRequired = 402,
    CNIAPIResponseeHTTPStatusCodeForbidden = 403,
    CNIAPIResponseeHTTPStatusCodeNotFound = 404,
    CNIAPIResponseeHTTPStatusCodeMethodNotAllowed = 405,
    CNIAPIResponseeHTTPStatusCodeNotAcceptable = 406,
    CNIAPIResponseeHTTPStatusCodeProxyAuthenticationRequired = 407,
    CNIAPIResponseeHTTPStatusCodeRequestTimeout = 408,
    CNIAPIResponseeHTTPStatusCodeConflict = 409,
    CNIAPIResponseeHTTPStatusCodeGone = 410,
    CNIAPIResponseeHTTPStatusCodeLengthRequired = 411,
    CNIAPIResponseeHTTPStatusCodePreconditionFailed = 412,
    CNIAPIResponseeHTTPStatusCodeRequestEntityTooLarge = 413,
    CNIAPIResponseeHTTPStatusCodeRequestURITooLong = 414,
    CNIAPIResponseeHTTPStatusCodeUnsupportedMediaTypes = 415,
    CNIAPIResponseeHTTPStatusCodeRequestRangeUnsatisifiable = 416,
    CNIAPIResponseeHTTPStatusCodeExpectationFail = 417,

    // Server Error
    CNIAPIResponseeHTTPStatusCodeInternalServerError = 500,
    CNIAPIResponseeHTTPStatusCodeNotImplemented = 501,
    CNIAPIResponseeHTTPStatusCodeBadGateway = 502,
    CNIAPIResponseeHTTPStatusCodeServiceUnavailable = 503,
    CNIAPIResponseeHTTPStatusCodeGatewayTimeout = 504,
    CNIAPIResponseeHTTPStatusCodeHTTPVersionNotSupported = 505
};

/**
 `CNIAPIResponse` class contains an information about HTTP response from the server
 */
@interface CNIAPIResponse : NSObject <NSCopying>

/**
 Associated response HTTP status code
 CNIAPIResponseeHTTPStatusCodeInvalid when no response was received
 */
@property (nonatomic, assign, readonly) CNIAPIResponseHTTPStatusCode statusCode;

/**
 Associated `NSURLResponse` object, nil if no response was received
 */
@property (nonatomic, copy, readonly, nullable) NSURLResponse *urlResponse;

/**
 The error that was received from server or generated by request
 */
@property (nonatomic, strong, readonly, nullable) NSError *error;

/**
 Associated request object to the response
 */
@property (nonatomic, strong, readonly) CNIAPIRequest *request;

/**
 Request's response headers. Nil if there was no headers in the response
 */
@property (nonatomic, copy, readonly, nullable) CNIAPIHeaders *headers;

/**
 Request's response body. Nil if there was no body in the response
 */
@property (nonatomic, copy, readonly, nullable) NSData *body;

- (instancetype)init NS_UNAVAILABLE;

/**
 Designated initializer to create a new instance of `CNIAPIResponse`

 @param request associated request to the response
 @return newly created `CNIAPIResponse` instance
 */
- (instancetype)initWithRequest:(CNIAPIRequest *)request NS_DESIGNATED_INITIALIZER NS_SWIFT_NAME(init(request:));


/**
 Convinience initializer to create a new instance of failed `CNIAPIResponse`

 @param request associated request to the response
 @param error failure reason
 @return newly created `CNIAPIResponse` instance
 */
- (instancetype)initWithRequest:(CNIAPIRequest *)request error:(NSError *)error NS_SWIFT_NAME(init(request:error:));


/**
 Convinience initializer to create a new instance of `CNIAPIResponse`
 
 @param request associated request to the response
 @param underlyingResponse associated `NSURLResponse` response to the response
 @param body response body
 @param error failure reason if request failed
 @return newly created `CNIAPIResponse` instance
 */
- (instancetype)initWithRequest:(CNIAPIRequest *)request underlyingResponse:(nullable NSURLResponse *)underlyingResponse body:(nullable NSData *)body error:(nullable NSError *)error NS_SWIFT_NAME(init(request:underlyingResponse:body:error:));

@end


NS_ASSUME_NONNULL_END
